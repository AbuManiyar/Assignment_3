# -*- coding: utf-8 -*-
"""Assignment_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sf4Y-NCL1n-w0uQCDk2_j6pH-EOI5ONc

(Open in Edit mode in google colab )

1. Why are functions advantageous to have in your programs?
**Answer:** The main advantages of funtion are

*   The reusability of the code
*   Easy to understand
*   Reduces the time to code
*   Example:- Function to find the area of a rectangle when given with two parameters length and breadth.

  def area(l, b):
     result = l*b
     print(result)

2. When does the code in a function run: when it's specified or when it's called?
**Answer:** Code in function will run if it is called with required
parameters and it must be defined in the code else it will throw an error
not defined. A function should be called with the exact name because
python is a case sensitive language. Which means these are two different
functions power(), Power(). And the code in a function executes when the
function is called, not when the function is defined.


3. What statement creates a function?
**Answer:** def name_of_function(parameter) :
                body_of_function
                return --variable,string or value--
syntax above shown generic way of creating a function and def keyword is used to create a function.


4. What is the difference between a function and a function call?
**Answer:** The difference between function and function call is that
function is a defined quantity which can perform certain task when it is
called. Function call is said when we use the defined function to obtain
certain outcome/results that a particular function can give by passing
required parameters if any. And this is the difference between Function and function call.


5. How many global scopes are there in a Python program? How many local scopes?
**Answer:**
There is only one gloabal scope. Number of local scopes depend on the number of function and classes defined.

6. What happens to variables in a local scope when the function call returns?
**Answer:**
They get destroyed when function returns. which means that they are no longer accessible.


7. What is the concept of a return value? Is it possible to have a return value in an expression?
**Answer:**
Every function has a return, if not given return it returns None. When a
function is called it performs its activity and returns certain value that
can be integer, string or None. Yes it is possible to have a return value
in an expression. An example for this could be:

def circle_area(radius):
  return 3.412*radius**2
def rectangle_area(length, breadth):
  return length*breadth

rad = int(input("Radius ="))
le = int(input("Length ="))
br = int(input("Breadth ="))

#this line shown return value used in an expression
total_area = circle_area(rad) + rectangle_area(le,br)

print(total_area)



8. If a function does not have a return statement, what is the return value of a call to that function?
**Answer:** None will be return.

9. How do you make a function variable refer to the global variable?
**Answer:** By adding a keyword global before variable name will make it a global variable.

def myfunc():
  global z
  z = 300
myfunc()
print(z)

10. What is the data type of None?
**Answer:** NoneType is the datatype of None.

11. What does the sentence import areallyourpetsnamederic do?
**Answer:** it will import the module/package named areallyourpetsnamederic
into the ram. so that we can use attributes and function defined in that
package.

12. If you had a bacon() feature in a spam module, what would you call it after importing spam?
**Answer:**
We call it and this can be done by spam.bacon()

13. What can you do to save a programme from crashing if it encounters an error?
**Answer:**
We can use a Try Except to save the programme from crash and display the exception block code.


14. What is the purpose of the try clause? What is the purpose of the except clause?
**Answer:** The purpose of the try clause is, the main programme is
executed first but if it has error then the error will not be displayed
and try block is skipped.

The purpose of except block is that it will get executed if try block has
error if try block does not have any error then this exception block will
not be executed or displayed.
"""

